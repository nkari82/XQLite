c# 엑셀 애드인

XqlAddIn.cs
XqlConfig.cs
XqlDiagExport.cs
XqlJson.cs
XqlTableNameMap.cs

Core/XqlBackup.cs
Core/XqlCollab.cs
Core/XqlCommon.cs
Core/XqlExcelInterop.cs
Core/XqlGqlBackend.cs
Core/XqlSheet.cs
Core/XqlSheetView.cs
Core/XqlSync.cs

UI/XqlConfigForm.cs
UI/XqlInspectorForm.cs
UI/XqlPresenceHudForm.cs
UI/XqlRecoverForm.cs
UI/XqlSchemaForm.cs

Ribbon/XqlRibbon.cs

Server
src/index.ts


문제점.
1. 로그 시트가 불필요해 보임. 없애 버리는게 나을수도? 창으로 하나 빼자.
1) XqlRibbon.cs — 동기화 그룹에 “Pull” 버튼 추가 + 핸들러

컨피그
프로젝트 이름이 DB파일 이름이 됨.
프로젝트 이름이 빈공간이라면 엑셀파일 이름이 기본으로 입력되어 있음.

기획자는 카테고리별로 엑셀시트를 만들고 여러개를 띄어서 보는게 편함. 
하지만 DB는 하나여야됨으로 프로젝트명으로 통일한다면 같은 DB에 들어감.
엑셀파일을 여러개 두고 프로젝트 이름 하나로 쓰는게 났다.

권장 구조
Authoring DB(서버·협업용): 실제 테이블 + 메타 컬럼(row_version, updated_at, deleted) + 관리 테이블(_audit, _presence, _locks, _schema …).
Release DB(게임용): 순수 테이블/뷰/트리거만 포함. 관리 테이블/메타 컬럼 제거. mode=ro&immutable=1로 배포.
History DB(선택): 필드 변경 이력 전용. 용량 관리 및 포렌식/회귀용.
최신 클라이언트 소스는 새 워크북 풀 시 시트 헤더에서 row_version/updated_at/deleted를 이미 숨기도록 되어 있어(부트스트랩/패치 시 둘 다 제외). 즉 “엑셀에 메타가 보이는 문제”는 최신 코드로 해결됨.

히스토리까지 포함되게 하려면 분리가 났다.

진짜 프로덕션에서는 프로젝트가 바로 생성이 안되고 CMS 관리자 페이지에서 프로젝트를 생성후 사용할 수 있다.







스펙2차를 위한 준비..